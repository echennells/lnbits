FROM python:3.12-slim-bookworm

# Install system dependencies including Node.js
RUN apt-get update && apt-get install -y \
    curl \
    pkg-config \
    build-essential \
    libnss-myhostname \
    nodejs \
    npm \
    && rm -rf /var/apt/lists/*

# Install newer Node.js version
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/apt/lists/*

# Install poetry
RUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.5
ENV PATH="/root/.local/bin:$PATH"

WORKDIR /app

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Install gRPC tools and protobuf with compatible versions
RUN pip install "grpcio==1.60.0" "grpcio-tools==1.60.0" "protobuf>=4.21.6,<5.0dev"

# Generate gRPC files during build
COPY lnbits/wallets/tapd_grpc_files/taprootassets.proto /app/lnbits/wallets/tapd_grpc_files/
COPY lnbits/wallets/tapd_grpc_files/generate_grpc.sh /app/lnbits/wallets/tapd_grpc_files/
RUN cd /app/lnbits/wallets/tapd_grpc_files && ./generate_grpc.sh

# We'll mount the app directory as a volume, so we don't need to COPY anything
CMD ["poetry", "run", "uvicorn", "--reload", "--host", "0.0.0.0", "--port", "5000", "lnbits.__main__:app"]