FROM python:3.12-slim-bookworm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl pkg-config build-essential libnss-myhostname nodejs npm \
    && rm -rf /var/apt/lists/*

# Install newer Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && rm -rf /var/apt/lists/*

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.3
ENV PATH="/root/.local/bin:$PATH"

# Set working directory
WORKDIR /app

# Set environment variables for Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Copy pyproject.toml, poetry.lock, and package.json first to leverage Docker cache
COPY pyproject.toml poetry.lock package.json /app/

# Install Python dependencies
RUN poetry lock --no-update && poetry install --no-root

# Install gRPC tools
RUN pip install "grpcio==1.69.0" "grpcio-tools==1.69.0" "httpx>=0.25.0" "loguru>=0.7.0"

# Install Node.js dependencies
RUN npm install
RUN npm install vue-qrcode-component

# Create directory structure
RUN mkdir -p /app/lnbits/wallets/lnd_grpc_files \
    /app/lnbits/wallets/tapd_grpc_files/tapchannelrpc \
    /app/lnbits/wallets/tapd_grpc_files/rfqrpc \
    /app/lnbits/wallets/tapd_grpc_files/routerrpc \
    /app/lnbits/wallets/tapd_grpc_files/assetwalletrpc/assetwalletrpc

# Copy the rest of the application
COPY . /app/

# Ensure additional Python dependencies are installed
RUN pip install "httpx>=0.25.0" "loguru>=0.7.0" "websockets"
